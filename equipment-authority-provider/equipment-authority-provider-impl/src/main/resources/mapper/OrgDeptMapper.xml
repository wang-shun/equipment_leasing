<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yankuang.equipment.authority.mapper.OrgDeptMapper">
    <resultMap id="BaseResultMap" type="com.yankuang.equipment.authority.model.OrgDept">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="department_id" property="departmentId" jdbcType="BIGINT"/>
        <result column="organization_id" property="organizationId" jdbcType="BIGINT"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_at" property="updateAt" jdbcType="BIGINT"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="create_at" property="createAt" jdbcType="BIGINT"/>
        <result column="version" property="version" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
      id, department_id, organization_id, create_by, update_at, update_by, create_at, version,
      status
    </sql>

    <insert id="create" parameterType="com.yankuang.equipment.authority.model.OrgDept">
    insert into el_organization_department_mapping (department_id, organization_id,
      create_by, update_at, update_by,
      create_at, version, status
      )
    values (#{departmentId}, #{organizationId},
        #{createBy}, unix_timestamp(now()), #{updateBy},
        unix_timestamp(now()), 0, 1
      )
  </insert>

    <!-- 部门字典删除，删除对应关系表，可能对应多个组织 -->
    <delete id="deleteByDeptId" parameterType="Long">
    update el_organization_department_mapping
    set status = 99
    where department_id = #{deptId}
  </delete>

    <!-- 根据组织id，删除对应组织下所有部门 -->
    <delete id="deleteByOrgId" parameterType="Long">
    update el_organization_department_mapping
    set status = 99
    where organization_id = #{orgId}
  </delete>

    <!-- 根据组织id和部门ids，删除对应组织下一个或者多个部门（字典表不操作） -->
    <delete id="deleteByOrgIdAndDeptId" parameterType="Map">
    update el_organization_department_mapping
    set status = 99
    where organization_id = #{orgId}
    and department_id in
        <foreach collection="deptIds" item="deptId" separator="," open="(" close=")">
            #{deptId}
        </foreach>
  </delete>

    <update id="update" parameterType="com.yankuang.equipment.authority.model.OrgDept">
        update el_organization_department_mapping
        <set>
            <if test="departmentId != null and departmentId != '' ">
                department_id = #{departmentId},
            </if>
            <if test="organizationId != null and organizationId != '' ">
                organization_id = #{organizationId},
            </if>
            <if test="updateBy != null and updateBy != '' ">
                update_by = #{updateBy},
            </if>
            update_at = unix_timestamp(now())
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findByOrgId" parameterType="Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM yankuang_equipment.el_organization_department_mapping
        WHERE status != 99
        and organization_id = #{orgId}
    </select>

    <select id="findByOrgIdAndDeptId" parameterType="Map" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM yankuang_equipment.el_organization_department_mapping
        WHERE status != 99
        and organization_id = #{orgId}
        and department_id = #{deptId}
    </select>

</mapper>