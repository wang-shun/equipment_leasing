<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.yankuang.equipment.authority.mapper.UserMapper">
    <resultMap id="UserMap" type="com.yankuang.equipment.authority.model.User">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="account" property="account" jdbcType="VARCHAR" />
        <result column="token" property="token" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="TINYINT" />
        <result column="telephone" property="telephone" jdbcType="VARCHAR" />
        <result column="mail" property="mail" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="create_by" property="createBy" jdbcType="VARCHAR" />
        <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
        <result column="update_at" property="updateAt" jdbcType="BIGINT" />
        <result column="sorting" property="sorting" jdbcType="BIGINT" />
        <result column="version" property="version" jdbcType="BIGINT" />
        <result column="create_at" property="createAt" jdbcType="BIGINT" />
        <result column="code" property="code" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="cols_exclude_password">
        id, <include refid="cols_exclude_id_password" />
    </sql>
    <sql id="cols_all">
        password, <include refid="cols_exclude_password" />
    </sql>
    <sql id="cols_exclude_id_password">
        code,
        name,
        sex,
        telephone,
        mail,
        status,
        remark,
        sorting,
        version,
        update_by,
        create_by,
        create_at,
        update_at,
        account
    </sql>

    <sql id="vals">
        #{password},
        #{id},
        #{code},
        #{name},
        #{sex},
        #{telephone},
        #{mail},
        1,
        #{remark},
        #{sorting},
        0,
        #{updateBy},
        #{createBy},
        unix_timestamp(now()),
        unix_timestamp(now()),
        #{account}
    </sql>

    <sql id="criteria">
        <if test="id != null and id != ''">AND id = #{id}</if>
        <if test="name != null and name != ''">AND name = #{name}</if>
        <if test="code != null and code != ''">AND code = #{code}</if>
    </sql>

    <insert id="create" parameterType="com.yankuang.equipment.authority.model.User"
            keyProperty="id" useGeneratedKeys="true">
        INSERT INTO el_user
        (<include refid="cols_all" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="UserMap" >
        SELECT <include refid="cols_all" />
        FROM el_user
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="com.yankuang.equipment.authority.model.User">
        UPDATE el_user
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="token != null and token != ''">token = #{token},</if>
            <if test="sex != null and sex != ''">sex = #{sex},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="telephone != null and telephone != ''">telephone = #{telephone},</if>
            <if test="mail != null and mail != ''">mail = #{mail},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="sorting != null and sorting != ''">sorting = #{sorting},</if>
            <if test="version != null and version != ''">version = #{version},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_at=unix_timestamp(now())
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        UPDATE el_user
        SET status = 99
        WHERE id = #{id}
    </delete>

    <select id="list" parameterType="map" resultMap="UserMap">
        SELECT <include refid="cols_exclude_password"/>
        FROM el_user
        <where>
            1 = 1
            and status != 99
            <include refid="criteria"/>
        </where>
        ORDER BY create_at DESC
    </select>

    <select id="findByName" parameterType="String" resultMap="UserMap">
        select <include refid="cols_all"/>
        from  el_user
        where name = #{name}
    </select>

    <select id="findByAccount" parameterType="String" resultMap="UserMap">
        select <include refid="cols_all"/>
        from  el_user
        where account = #{account}
    </select>

    <update id="stop" parameterType="Long">
        UPDATE el_user
        SET status = 2
        WHERE id = #{id}
    </update>

    <update id="start" parameterType="Long">
        UPDATE el_user
        SET status = 1
        WHERE id = #{id}
    </update>

</mapper>