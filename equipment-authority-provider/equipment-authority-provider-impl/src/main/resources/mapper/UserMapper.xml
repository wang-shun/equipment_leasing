<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="User">
    <resultMap id="UserMap" type="User">
        <id column="id" property="id"/>
        <result column="nick_name" property="nickName"/>
        <result column="user_name" property="userName"/>
        <result column="password" property="password"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        user
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        nick_name,
        user_name,
        password,
        created_at,
        updated_at

    </sql>

    <sql id="vals">
        #{nickName},
        #{userName},
        #{password},
        now(),
        now()
    </sql>

    <sql id="criteria">
        <if test="id != null">AND id = #{id}</if>
        <if test="nickName != null">AND nick_name = #{nickName}</if>
        <if test="userName != null">AND user_name = #{userName}</if>
    </sql>

    <insert id="create" parameterType="User" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="UserMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="User">
        UPDATE <include refid="tb"/>
        <set>
            <if test="id != null">id = #{id},</if>
            <if test="nickName != null">nick_name = #{nickName},</if>
            <if test="userName != null">user_name = #{userName},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="list" parameterType="map" resultMap="UserMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            1 = 1
            <include refid="criteria"/>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            1 = 1
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="UserMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            1 = 1
            <include refid="criteria"/>
        </where>
        order by created_at desc LIMIT #{offset}, #{limit}
    </select>

    <select id="login" parameterType="String" resultMap="UserMap">
        select <include refid="cols_all"/>
        from  <include refid="tb"/>
        where user_name = #{userName}
    </select>

</mapper>