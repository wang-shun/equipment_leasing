<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yankuang.equipment.equipment.mapper.SbTypeMapper">
  <resultMap id="BaseResultMap" type="com.yankuang.equipment.equipment.model.SbType">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pcode" jdbcType="VARCHAR" property="pcode" />
    <result column="sorting" jdbcType="BIGINT" property="sorting" />
    <result column="level" jdbcType="BIGINT" property="level" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, name, pcode, sorting, level, status, remark, create_by, create_at, update_by, 
    update_at, version
  </sql>
  <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sb_type
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteById" parameterType="java.lang.Long">
    delete from sb_type
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="create" keyProperty="id" useGeneratedKeys="true" parameterType="com.yankuang.equipment.equipment.model.SbType">
    insert into sb_type (code, name,
      pcode, sorting, level,
      remark, create_by,
      create_at, update_by, update_at
      )
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{pcode,jdbcType=VARCHAR}, #{sorting,jdbcType=BIGINT}, #{level,jdbcType=BIGINT},
      #{remark,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR},
      #{createAt,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateAt,jdbcType=TIMESTAMP}
      )
  </insert>

  <update id="update" parameterType="com.yankuang.equipment.equipment.model.SbTypeInfo">
    update sb_type
    set name = #{typeName,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where id = #{typeId,jdbcType=BIGINT}
  </update>

    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sb_type t
        where t.status = '1'
        order by t.level,code
    </select>

  <select id="listByPcodeOrLevel" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sb_type t
    where t.status = '1'
        and t.pcode = #{p_code,jdbcType=VARCHAR}
        and t.level = #{p_level,jdbcType=BIGINT}
    order by t.level,code
  </select>
</mapper>