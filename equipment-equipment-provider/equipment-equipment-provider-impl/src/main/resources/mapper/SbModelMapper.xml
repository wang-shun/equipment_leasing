<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yankuang.equipment.equipment.mapper.SbModelMapper" >
  <resultMap id="BaseResultMap" type="com.yankuang.equipment.equipment.model.SbModel" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sbtype_one" property="sbtypeOne" jdbcType="VARCHAR" />
    <result column="sbtype_one_name" property="sbtypeOneName" jdbcType="VARCHAR" />
    <result column="sbtype_two" property="sbtypeTwo" jdbcType="VARCHAR" />
    <result column="sbtype_two_name" property="sbtypeTwoName" jdbcType="VARCHAR" />
    <result column="sbtype_three" property="sbtypeThree" jdbcType="VARCHAR" />
    <result column="sbtype_three_name" property="sbtypeThreeName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, name, sbtype_one, sbtype_two, sbtype_three, status, create_by, create_at, 
    update_by, update_at, version
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sb_model
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sb_model
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yankuang.equipment.equipment.model.SbModel" >
    insert into sb_model (code, name,
      sbtype_one, sbtype_two, sbtype_three, 
      status, create_by, create_at, 
      update_by, update_at, version
      )
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{sbtypeOne,jdbcType=VARCHAR}, #{sbtypeTwo,jdbcType=VARCHAR}, #{sbtypeThree,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createBy,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateAt,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yankuang.equipment.equipment.model.SbModel" >
    insert into sb_model
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sbtypeOne != null" >
        sbtype_one,
      </if>
      <if test="sbtypeTwo != null" >
        sbtype_two,
      </if>
      <if test="sbtypeThree != null" >
        sbtype_three,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sbtypeOne != null" >
        #{sbtypeOne,jdbcType=VARCHAR},
      </if>
      <if test="sbtypeTwo != null" >
        #{sbtypeTwo,jdbcType=VARCHAR},
      </if>
      <if test="sbtypeThree != null" >
        #{sbtypeThree,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yankuang.equipment.equipment.model.SbModel" >
    update sb_model
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sbtypeOne != null" >
        sbtype_one = #{sbtypeOne,jdbcType=VARCHAR},
      </if>
      <if test="sbtypeTwo != null" >
        sbtype_two = #{sbtypeTwo,jdbcType=VARCHAR},
      </if>
      <if test="sbtypeThree != null" >
        sbtype_three = #{sbtypeThree,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yankuang.equipment.equipment.model.SbModel" >
    update sb_model
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sbtype_one = #{sbtypeOne,jdbcType=VARCHAR},
      sbtype_two = #{sbtypeTwo,jdbcType=VARCHAR},
      sbtype_three = #{sbtypeThree,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="listAll" resultMap="BaseResultMap">
    select t.*,t1.name as sbtype_one_name,t2.name as sbtype_two_name,t3.name as sbtype_three_name
    from sb_model t
    left JOIN sb_type t1 on t.sbtype_one=t1.code and t1.status=1
    left JOIN sb_type t2 on t.sbtype_two=t2.code and t2.status=1
    left JOIN sb_type t3 on t.sbtype_three=t3.code and t3.status=1
    <where>
      1=1 and t.status = 1
      <if test="code != null" >
        AND t.code like '%#{code}%'
      </if>
      <if test="name != null" >
        AND t.name like '%#{name}%'
      </if>
    </where>
  </select>

  <select id="selectByMaxId" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from sb_model
    where id=(select MAX(id) from sb_model where sbtype_three = #{sbtypeThree})
  </select>
</mapper>